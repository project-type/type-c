

type Serializable = interface {
    fn serialize() -> string
}

type User = class(Serializable) {
    let name: string = ""
    let age: u32 = 20
}

type Bot = class(Serializable) {
    let name: string = ""
    let commands: string[] = []

    fn init(name: string) {
        this.name = name
    }
}


type User2 = interface(Serializable) {
    fn serialize2() -> string
}


let X: User = new User("hello", 32)
let Y: Serializable = 1

X as Serializable
unsafe {Y as User}

fn call(x: u32) -> User2 = 1

unsafe {call(32) as interface{fn serialize2() -> string}}

// [1, 2, 3, 4, 5] // OK
 ["hi", "cool", 1] // Error